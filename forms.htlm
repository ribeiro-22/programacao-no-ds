<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Cadastro de Clientes</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    input, select, button { margin: 5px 0; display: block; width: 300px; }
    #listBoxClientes { height: 100px; }
  </style>
</head>
<body>
  <h2>Cadastro de Clientes</h2>

  <label for="listBoxClientes">Clientes:</label>
  <select id="listBoxClientes" size="5"></select>
  <button id="btnBuscar">Buscar Cliente</button>

  <h3>Dados do Cliente</h3>
  <input type="text" id="txtNome" placeholder="Nome">
  <input type="text" id="txtEndereco" placeholder="Endereço">
  <input type="text" id="txtTelefone" placeholder="Telefone">
  <input type="email" id="txtEmail" placeholder="Email">

  <button id="btnIncluir">Incluir Cliente</button>
  <button id="btnAlterar">Alterar Cliente</button>
  <div id="botaoLimparContainer"></div>

  <script>
    class ClienteManager {
      constructor() {
        this.listBox = document.getElementById("listBoxClientes");
        this.campos = {
          nome: document.getElementById("txtNome"),
          endereco: document.getElementById("txtEndereco"),
          telefone: document.getElementById("txtTelefone"),
          email: document.getElementById("txtEmail")
        };
        this.inicializarDados();
        this.carregarLista();
        this.criarBotaoLimpar();
      }

      inicializarDados() {
        if (!localStorage.getItem("clientes")) {
          const clientesIniciais = [
            { id: 1, nome: "João Silva", endereco: "Rua A", telefone: "123456", email: "joao@gmail.com" },
            { id: 2, nome: "Maria Oliveira", endereco: "Rua B", telefone: "654321", email: "maria@gmail.com" }
          ];
          localStorage.setItem("clientes", JSON.stringify(clientesIniciais));
        }
      }

      carregarLista() {
        this.listBox.innerHTML = "";
        const listaClientes = this.getClientes();
        listaClientes.forEach(cliente => {
          const option = document.createElement("option");
          option.value = cliente.id;
          option.textContent = `${cliente.id} - ${cliente.nome}`;
          this.listBox.appendChild(option);
        });
      }

      getClientes() {
        return JSON.parse(localStorage.getItem("clientes")) || [];
      }

      salvarClientes(clientes) {
        localStorage.setItem("clientes", JSON.stringify(clientes));
      }

      buscarCliente() {
        const selectedId = parseInt(this.listBox.value);
        const cliente = this.getClientes().find(c => c.id === selectedId);
        if (cliente) {
          this.campos.nome.value = cliente.nome;
          this.campos.endereco.value = cliente.endereco;
          this.campos.telefone.value = cliente.telefone;
          this.campos.email.value = cliente.email;
        }
      }

      validarCampos() {
        return Object.values(this.campos).every(campo => campo.value.trim() !== "");
      }

      incluirCliente() {
        if (!this.validarCampos()) {
          alert("Preencha todos os campos antes de incluir.");
          return;
        }

        const clientes = this.getClientes();
        const novoId = clientes.length ? Math.max(...clientes.map(c => c.id)) + 1 : 1;

        const novoCliente = {
          id: novoId,
          nome: this.campos.nome.value.trim(),
          endereco: this.campos.endereco.value.trim(),
          telefone: this.campos.telefone.value.trim(),
          email: this.campos.email.value.trim()
        };

        clientes.push(novoCliente);
        this.salvarClientes(clientes);
        this.carregarLista();
        this.limparCampos();
      }

      alterarCliente() {
        const selectedId = parseInt(this.listBox.value);
        if (isNaN(selectedId)) {
          alert("Selecione um cliente para alterar.");
          return;
        }

        if (!this.validarCampos()) {
          alert("Preencha todos os campos antes de alterar.");
          return;
        }

        const clientes = this.getClientes();
        const index = clientes.findIndex(c => c.id === selectedId);
        if (index !== -1) {
          clientes[index] = {
            id: selectedId,
            nome: this.campos.nome.value.trim(),
            endereco: this.campos.endereco.value.trim(),
            telefone: this.campos.telefone.value.trim(),
            email: this.campos.email.value.trim()
          };
          this.salvarClientes(clientes);
          this.carregarLista();
          this.limparCampos();
        }
      }

      limparCampos() {
        Object.values(this.campos).forEach(campo => campo.value = "");
      }

      criarBotaoLimpar() {
        const botao = document.createElement("button");
        botao.textContent = "Limpar campos";
        botao.onclick = () => this.limparCampos();
        document.getElementById("botaoLimparContainer").appendChild(botao);
      }
    }

    // Instanciando e conectando eventos
    const app = new ClienteManager();
    document.getElementById("btnBuscar").onclick = () => app.buscarCliente();
    document.getElementById("btnIncluir").onclick = () => app.incluirCliente();
    document.getElementById("btnAlterar").onclick = () => app.alterarCliente();
  </script>
</body>
</html>
